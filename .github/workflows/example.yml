name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: "@Eliane9455"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install psycopg2
          pip install Flask
          pip install Unidecode
          pip install python-dateutil
          pip install mock
          pip install pytest-mock
          pip install coverage
          pip install pytest
          pip install pytest-cov
          pip install tqdm
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics      
      - name: Run migrations
        run: psql -f db/scripts/creation_db_script.sql postgresql://postgres:postgres@localhost:5432/postgres
      - name: Test with pytest
        run: |
          pytest src
      - name: Run Coverage
        run: |
          coverage run -m pytest src/
          coverage report -m          
          coverage html
      - name: Codecov
        uses: codecov/codecov-action@v3.1.0    
      
